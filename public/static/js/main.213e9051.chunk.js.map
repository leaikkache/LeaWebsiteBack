{"version":3,"sources":["components/Nav.js","Context.js","pages/Home.js","pages/Projects.js","pages/Manifesto.js","pages/Summaries.js","pages/Letters.js","pages/Prices.js","pages/Partners.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","props","context","state","language","onClick","this","changeLanguage","data-language","Component","withRouter","MyContext","React","createContext","MyProvider","e","setState","target","dataset","Provider","value","children","Home","Consumer","Projects","Manifesto","Summaries","Letters","Prices","Partners","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.213e9051.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {withRouter} from 'react-router';\nimport '../stylesheets/Nav.css';\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"Nav\">\n        <ul className=\"nav-list\">\n          <li>\n            <Link className=\"link\" to=\"/\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Home\"\n                  } else {\n                    return \"Menu\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/projets\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Projects\"\n                  } else {\n                    return \"Projets\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/manifeste\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Manifesto\"\n                  } else {\n                    return \"Manifeste\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/résumés\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Summaries\"\n                  } else {\n                    return \"Résumés\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/lettres\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Letters\"\n                  } else {\n                    return \"Lettres\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/prestations\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Prices\"\n                  } else {\n                    return \"Prestations\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li>\n            <Link className=\"link\" to=\"/partenaires\">\n              {\n                (() => {\n                  if (this.props.context.state.language === 'en') {\n                    return \"Partners\"\n                  } else {\n                    return \"Partenaires\"\n                  }\n                })()\n              }\n            </Link>\n          </li>\n          <li className=\"nav-languages\">\n            <span\n              onClick={this.props.context.changeLanguage}\n              data-language=\"en\"\n            >\n              EN\n            </span>\n\n            <span>/</span>\n\n            <span\n              onClick={this.props.context.changeLanguage}\n              data-language=\"fr\"\n            >\n              FR\n            </span>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(Nav)","import React, { Component } from 'react'\n\n// Create new context\nexport const MyContext = React.createContext()\n\n// Then create a Provider Component\nexport class MyProvider extends Component {\n  state = {\n    language: ''\n  }\n\n  changeLanguage = (e) => {\n    this.setState({\n      language: e.target.dataset.language\n    })\n  }\n\n  render() {\n    return (\n      <MyContext.Provider value={{\n        state: this.state,\n        changeLanguage: this.changeLanguage,\n      }}>\n        {this.props.children}\n      </MyContext.Provider>\n    )\n  }\n}","import React, { Component } from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <MyContext.Consumer>\n        {(context) => (\n          <div className=\"Home\">\n            {\n              (() => {\n                if (context.state.language === 'en') {\n                  return (\n                    <div>\n                      Hi\n                      My name is Lea, I’m an engineer, musician and campaigner for sustainable development and equality. After giving it a lot of thought and discovering many amazing persons and projects, I’m pursuing what I believe to be the most impactful path : that of education, training and writing. I offer training in entrepreneurship, sustainability and coding for individuals and organizations.\n                      This website might be valuable to you if:\n                        - you’d like to get involved in sustainability or equality, but you’re not sure about how to get started\n                        - you are calling your work into question, you want it to be more fulfilling and impactful\n                        - you are looking for ways to convince people that sustainability and equality are relevant\n                        - you are curious about these subjects\n                    </div>\n                  ) \n                } else {\n                  return (\n                    <div>\n                      Bonjour,\n                      Je suis Léa Ikkache, ingénieure, musicienne, militante pour le développement durable et l’égalité. Après une longue réflexion et de nombreuses découvertes de personnes et de projets inspirants, je me lance dans la voie qui me semble avoir le meilleur ratio énergie dépensée / impact positif : celle de l’éducation, de la formation et de l’écriture. Je propose des formations en entreprenariat, en développement durable, et en programmation pour les particuliers et les organisations.\n                      Ce site est fait pour vous si :\n                          - vous êtes intéressé.e par les sujets du développement durable, du développement personnel et de l’entreprenariat, mais vous ne savez pas par où commencer\n                          - vous vous questionnez sur votre travail, vous voudriez qu’il produise plus de valeur ou ait un impact plus positif\n                          - vous souhaitez compléter votre discours pour convaincre de l’utilité développement durable et de l’égalité\n                          - vous êtes curieux de ces sujets\n                    </div>\n                  )\n                }\n              })()\n            }\n          </div>\n        )}\n      </MyContext.Consumer>\n    )\n  }\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\nimport '../stylesheets/Projects.css'\n\nexport default function Projects() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Projects\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    <h1>Projects</h1>\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    <h1>Projets</h1>\n                  </div>\n                )\n              }\n            })()\n          }\n\n          {/* consider the hexagons as several lines, adjust the lines and not the hexagons themselves */}\n\n          <div className=\"hexagons-container\">\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n            <div className=\"hexagon\"></div>\n          </div>\n          \n        </div>        \n\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n\nexport default function Manifesto() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Manifesto\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    Manifesto\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    Manifeste\n                  </div>\n                )\n              }\n            })()\n          }\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n  \nexport default function Summaries() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Summaries\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    Summaries\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    Résumés\n                  </div>\n                )\n              }\n            })()\n          }\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n\nexport default function Letters() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Letters\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    Letters\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    Lettres\n                  </div>\n                )\n              }\n            })()\n          }\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n\nexport default function Prices() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Prices\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    Prices\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    Prestations\n                  </div>\n                )\n              }\n            })()\n          }\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\n// Import context and provider\nimport { MyContext } from '../Context';\n\nexport default function Partners() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"Partners\">\n          {\n            (() => {\n              if (context.state.language === 'en') {\n                return (\n                  <div>\n                    Partners\n                  </div>\n                ) \n              } else {\n                return (\n                  <div>\n                    Partenaires\n                  </div>\n                )\n              }\n            })()\n          }\n        </div>\n      )}\n    </MyContext.Consumer>\n  )\n}\n","import React from 'react';\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Projects from './pages/Projects';\nimport Manifesto from './pages/Manifesto';\nimport Summaries from './pages/Summaries';\nimport Letters from './pages/Letters';\nimport Prices from './pages/Prices';\nimport Partners from './pages/Partners';\nimport { MyContext } from './Context'\n\nimport {Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <MyContext.Consumer>\n      {(context) => (\n        <div className=\"App\">\n          <Nav context={context} />\n          <Route exact path=\"/\" component={Home}/> \n          <Route path=\"/projets\" component={Projects}/> \n          <Route path=\"/manifeste\" component={Manifesto}/> \n          <Route path=\"/résumés\" component={Summaries}/> \n          <Route path=\"/lettres\" component={Letters}/> \n          <Route path=\"/prestations\" component={Prices}/> \n          <Route path=\"/partenaires\" component={Partners}/> \n        </div>\n      )}\n    </MyContext.Consumer>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport { MyProvider } from './Context'\n\nReactDOM.render(<MyProvider> <Router> <App /> </Router> </MyProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}